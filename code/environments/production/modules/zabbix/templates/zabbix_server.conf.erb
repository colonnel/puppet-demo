# this is a configuration file for zabbix server process
# to get more information about zabbix,
# visit http://www.zabbix.com

############ GENERAL PARAMETERS #################
<% if @zabbix_version.to_f < 2.4 %>
### Option: NodeID
#   Unique NodeID in distributed setup.
#   0 - standalone server
#
NodeID=<%= @nodeid %>
<% end %>

### Option: ListenPort
#	Listen port for trapper.
#
# Mandatory: no
# Range: 1024-32767
# Default:
# ListenPort=10051
ListenPort=<%= @listenport %>

### Option: SourceIP
#	Source IP address for outgoing connections.
#
# Mandatory: no
# Default:
# SourceIP=
<% if @sourceip %>SourceIP=<%= @sourceip %><% end %>

<% if @zabbix_version.to_f >= 3.0 %>
### Option: LogType
#	Specifies where log messages are written to:
#		system  - syslog
#		file    - file specified with LogFile parameter
#		console - standard output
#
<% if @logtype %>LogType=<%= @logtype %><% end %>
<% end %>

### Option: LogFile
#	Log file name for LogType 'file' parameter.
#
LogFile=<%= @logfile %>

### Option: LogFileSize
#	Maximum size of log file in MB.
#	0 - disable automatic log rotation.
#
LogFileSize=<%= @logfilesize %>

### Option: DebugLevel
#	Specifies debug level:
#	0 - basic information about starting and stopping of Zabbix processes
#	1 - critical information
#	2 - error information
#	3 - warnings
#	4 - for debugging (produces lots of information)
<% if @zabbix_version.to_f >= 3.0 %>
#	5 - extended debugging (produces even more information)
<% end %>
DebugLevel=<%= @debuglevel %>

### Option: PidFile
#	Name of PID file.
#
PidFile=<%= @pidfile %>

### Option: DBHost
#	Database host name.
#	If set to localhost, socket is used for MySQL.
#	If set to empty string, socket is used for PostgreSQL.
#
DBHost=<%= @database_host %>

### Option: DBName
#	Database name.
#	For SQLite3 path to database file must be provided. DBUser and DBPassword are ignored.
#
DBName=<%= @database_name %>

### Option: DBSchema
#	Schema name. Used for IBM DB2 and PostgreSQL.
#
<% if @database_schema %>DBSchema=<%= @database_schema %><% end %>

### Option: DBUser
#	Database user. Ignored for SQLite.
#
DBUser=<%= @database_user %>

### Option: DBPassword
#	Database password. Ignored for SQLite.
#	Comment this line if no password is used.
#
DBPassword=<%= @database_password %>

### Option: DBSocket
#	Path to MySQL socket.
#
<% if @database_socket %>DBSocket=<%= @database_socket %><% end %>

### Option: DBPort
#	Database port when not using local socket. Ignored for SQLite.
#
<% if @database_port %>DBPort=<%= @database_port %><% end %>

############ ADVANCED PARAMETERS ################

### Option: StartPollers
#	Number of pre-forked instances of pollers.
#
StartPollers=<%= @startpollers %>

### Option: StartIPMIPollers
#	Number of pre-forked instances of IPMI pollers.
#
StartIPMIPollers=<%= @startipmipollers %>

### Option: StartPollersUnreachable
#	Number of pre-forked instances of pollers for unreachable hosts (including IPMI and Java).
#	At least one poller for unreachable hosts must be running if regular, IPMI or Java pollers
#	are started.
#
StartPollersUnreachable=<%= @startpollersunreachable %>

### Option: StartTrappers
#	Number of pre-forked instances of trappers.
#	Trappers accept incoming connections from Zabbix sender, active agents and active proxies.
#	At least one trapper process must be running to display server availability and view queue
#	in the frontend.
#
StartTrappers=<%= @starttrappers %>

### Option: StartPingers
#	Number of pre-forked instances of ICMP pingers.
#
StartPingers=<%= @startpingers %>

### Option: StartDiscoverers
#	Number of pre-forked instances of discoverers.
#
StartDiscoverers=<%= @startdiscoverers %>

### Option: StartHTTPPollers
#	Number of pre-forked instances of HTTP pollers.
#
StartHTTPPollers=<%= @starthttppollers %>

### Option: StartTimers
#	Number of pre-forked instances of timers.
#	Timers process time-based trigger functions and maintenance periods.
#	Only the first timer process handles the maintenance periods.
#
StartTimers=<%= @starttimers %>

<% if @zabbix_version.to_f >= 3.0 %>
### Option: StartEscalators
#   Number of pre-forked instances of escalators.
#
<% if @startescalators %>StartEscalators=<%= @startescalators %><% end %>
<% end %>

<% if @javagateway %>
### Option: JavaGateway
#	IP address (or hostname) of Zabbix Java gateway.
#	Only required if Java pollers are started.
#
JavaGateway=<%= @javagateway %>

### Option: JavaGatewayPort
#	Port that Zabbix Java gateway listens on.
#
JavaGatewayPort=<%= @javagatewayport %>

### Option: StartJavaPollers
#	Number of pre-forked instances of Java pollers.
#
StartJavaPollers=<%= @startjavapollers %>
<% end %>

### Option: StartVMwareCollectors
#	Number of pre-forked vmware collector instances.
#
StartVMwareCollectors=<%= @startvmwarecollectors %>

### Option: VMwareFrequency
#	How often Zabbix will connect to VMware service to obtain a new data.
#
VMwareFrequency=<%= @vmwarefrequency %>

### Option: VMwarePerfFrequency
#   How often Zabbix will connect to VMware service to obtain performance data.
#
<% if @vmwareperffrequency %>VMwarePerfFrequency=<%= @vmwareperffrequency %><% end %>

### Option: VMwareCacheSize
#   Size of VMware cache, in bytes.
#   Shared memory size for storing VMware data.
#   Only used if VMware collectors are started.
#
VMwareCacheSize=<%= @vmwarecachesize %>

### Option: VMwareTimeout
#   Specifies how many seconds vmware collector waits for response from VMware service.
#
<% if @vmwaretimeout %>VMwareTimeout=<%= @vmwaretimeout %><% end %>

<% if @zabbix_version.to_f < 2.4 %>
### Option: EnableSNMPBulkRequests
#   Enable or disable SNMP bulk requests.
#   0 - disable
#   1 - enable
#
<% if @enablesnmpbulkrequests %>EnableSNMPBulkRequests=<%= @enablesnmpbulkrequests %><% end %>
<% end %>

### Option: SNMPTrapperFile
#   Temporary file used for passing data from SNMP trap daemon to the server.
#   Must be the same as in zabbix_trap_receiver.pl or SNMPTT configuration file.
#
SNMPTrapperFile=<%= @snmptrapperfile %>

### Option: StartSNMPTrapper
#   If 1, SNMP trapper process is started.
#
StartSNMPTrapper=<%= @startsnmptrapper %>

### Option: ListenIP
#   List of comma delimited IP addresses that the trapper should listen on.
#   Trapper will listen on all network interfaces if this parameter is missing.
#
<% if @listenip %>ListenIP=<%= @listenip %><% end %>

### Option: HousekeepingFrequency
#   How often Zabbix will perform housekeeping procedure (in hours).
#   Housekeeping is removing outdated information from the database.
#   To prevent Housekeeper from being overloaded, no more than 4 times HousekeepingFrequency
#   hours of outdated information are deleted in one housekeeping cycle, for each item.
#   To lower load on server startup housekeeping is postponed for 30 minutes after server start.
#
HousekeepingFrequency=<%= @housekeepingfrequency %>

### Option: MaxHousekeeperDelete
#   The table "housekeeper" contains "tasks" for housekeeping procedure in the format:
#   [housekeeperid], [tablename], [field], [value].
#   No more than 'MaxHousekeeperDelete' rows (corresponding to [tablename], [field], [value])
#   will be deleted per one task in one housekeeping cycle.
#   SQLite3 does not use this parameter, deletes all corresponding rows without a limit.
#   If set to 0 then no limit is used at all. In this case you must know what you are doing!
#
MaxHousekeeperDelete=<%= @maxhousekeeperdelete %>

<% if @zabbix_version.to_f < 3.4 %>
### Option: SenderFrequency
#   How often Zabbix will try to send unsent alerts (in seconds).
#
SenderFrequency=<%= @senderfrequency %>
<% end %>

### Option: CacheSize
#   Size of configuration cache, in bytes.
#   Shared memory size for storing host, item and trigger data.
#
CacheSize=<%= @cachesize %>

### Option: CacheUpdateFrequency
#   How often Zabbix will perform update of configuration cache, in seconds.
#
CacheUpdateFrequency=<%= @cacheupdatefrequency %>

### Option: StartDBSyncers
#   Number of pre-forked instances of DB Syncers
#
StartDBSyncers=<%= @startdbsyncers %>

### Option: HistoryCacheSize
#   Size of history cache, in bytes.
#   Shared memory size for storing history data.
#
HistoryCacheSize=<%= @historycachesize %>

<% if @zabbix_version.to_f >= 3.0 %>
### Option: HistoryIndexCacheSize
#   Size of history index cache, in bytes.
#   Shared memory size for indexing history cache.
#
<% if @historyindexcachesize %>HistoryIndexCacheSize=<%= @historyindexcachesize %><% end %>
<% end %>

### Option: TrendCacheSize
#   Size of trend cache, in bytes.
#   Shared memory size for storing trends data.
#
TrendCacheSize=<%= @trendcachesize %>

<% if @zabbix_version.to_f <= 2.4 %>
### Option: HistoryTextCacheSize
#   Size of text history cache, in bytes.
#   Shared memory size for storing character, text or log history data.
#
HistoryTextCacheSize=<%= @historytextcachesize %>
<% end %>

### Option: ValueCacheSize
#   Size of history value cache, in bytes.
#   Shared memory size for caching item history data requests.
#   Setting to 0 disables value cache.
#
ValueCacheSize=<%= @valuecachesize %>

<% if @zabbix_version.to_f < 2.4 %>
### Option: NodeNoEvents
#   If set to '1' local events won't be sent to master node.
#   This won't impact ability of this node to propagate events from its child nodes.
#
NodeNoEvents=<%= @nodenoevents %>

### Option: NodeNoHistory
#   If set to '1' local history won't be sent to master node.
#   This won't impact ability of this node to propagate history from its child nodes.
#
NodeNoHistory=<%= @nodenohistory %>
<% end %>

### Option: Timeout
#   Specifies how long we wait for agent, SNMP device or external check (in seconds).
#
Timeout=<%= @timeout %>

### Option: TrapperTimeout
#   Specifies how many seconds trapper may spend processing new data.
#
TrapperTimeout=<%= @trappertimeout %>

### Option: UnreachablePeriod
#   After how many seconds of unreachability treat a host as unavailable.
#
UnreachablePeriod=<%= @unreachableperiod %>

### Option: UnavailableDelay
#   How often host is checked for availability during the unavailability period, in seconds.
#
UnavailableDelay=<%= @unavailabledelay %>

### Option: UnreachableDelay
#   How often host is checked for availability during the unreachability period, in seconds.
#
UnreachableDelay=<%= @unreachabledelay %>

### Option: AlertScriptsPath
#   Full path to location of custom alert scripts.
#   Default depends on compilation options.
#
AlertScriptsPath=<%= @alertscriptspath %>

### Option: ExternalScripts
#   Full path to location of external scripts.
#   Default depends on compilation options.
#
ExternalScripts=<%= @externalscripts %>

### Option: FpingLocation
#   Location of fping.
#   Make sure that fping binary has root ownership and SUID flag set.
#
FpingLocation=<%= @fpinglocation %>

### Option: Fping6Location
#   Location of fping6.
#   Make sure that fping6 binary has root ownership and SUID flag set.
#   Make empty if your fping utility is capable to process IPv6 addresses.
#
Fping6Location=<%= @fping6location %>

### Option: SSHKeyLocation
#   Location of public and private keys for SSH checks and actions.
#
<% if @sshkeylocation %>SSHKeyLocation=<%= @sshkeylocation %><% end %>

### Option: LogSlowQueries
#   How long a database query may take before being logged (in milliseconds).
#   Only works if DebugLevel set to 3 or 4<% if @zabbix_version.to_f >= 3.0 %> or 5<% end %>.
#   0 - don't log slow queries.
#
LogSlowQueries=<%= @logslowqueries %>

### Option: TmpDir
#   Temporary directory.
#
TmpDir=<%= @tmpdir %>

### Option: StartProxyPollers
#   Number of pre-forked instances of pollers for passive proxies.
#
StartProxyPollers=<%= @startproxypollers %>

### Option: ProxyConfigFrequency
#   How often Zabbix Server sends configuration data to a Zabbix Proxy in seconds.
#   This parameter is used only for proxies in the passive mode.
#
ProxyConfigFrequency=<%= @proxyconfigfrequency %>

### Option: ProxyDataFrequency
#   How often Zabbix Server requests history data from a Zabbix Proxy in seconds.
#   This parameter is used only for proxies in the passive mode.
#
ProxyDataFrequency=<%= @proxydatafrequency %>

### Option: AllowRoot
#   Allow the server to run as 'root'. If disabled and the server is started by 'root', the server
#   will try to switch to the user specified by the User configuration option instead.
#   Has no effect if started under a regular user.
#   0 - do not allow
#   1 - allow
#
AllowRoot=<%= @allowroot %>

### Option: User
#   Drop privileges to a specific, existing user on the system.
#   Only has effect if run as 'root' and AllowRoot is disabled.
#
# Mandatory: no
# Default:
# User=zabbix
<% if @zabbix_user %>User=<%= @zabbix_user %><% end %>

### Option: Include
#   You may include individual files or all files in a directory in the configuration file.
#   Installing Zabbix will create include directory in /usr/local/etc, unless modified during the compile time.
#
Include=<%= @include_dir %>

<% if @zabbix_version == '2.4' %>
### Option: SSLCertLocation
#   Location of SSL client certificates.
#   This parameter is used only in web monitoring.
#
SSLCertLocation=<%= @sslcertlocation_dir %>

### Option: SSLKeyLocation
#   Location of private keys for SSL client certificates.
#   This parameter is used only in web monitoring.
#
SSLKeyLocation=<%= @sslkeylocation_dir %>

### Option: SSLCALocation
#   Override the location of certificate authority (CA) files for SSL server certificate verification.
#   If not set, system-wide directory will be used.
#   This parameter is used only in web monitoring.
#
<% if @sslcalocation_dir %>SSLCALocation=<%= @sslcalocation_dir %><% end %>
<% end %>

####### LOADABLE MODULES #######

### Option: LoadModulePath
#   Full path to location of server modules.
#   Default depends on compilation options.
#
LoadModulePath=<%= @loadmodulepath %>

### Option: LoadModule
#   Module to load at server startup. Modules are used to extend functionality of the server.
#   Format: LoadModule=<module.so>
#   The modules must be located in directory specified by LoadModulePath.
#   It is allowed to include multiple LoadModule parameters.
#
<% if @loadmodule %>LoadModule = <%= @loadmodule %><% end %>

<% if @zabbix_version.to_f >= 3.0 %>
####### TLS-RELATED PARAMETERS #######

### Option: TLSCAFile
#	Full pathname of a file containing the top-level CA(s) certificates for
#	peer certificate verification.
#
# Mandatory: no
# Default:
# TLSCAFile=
<% if @tlscafile %>TLSCAFile=<%= @tlscafile %><% end %>

### Option: TLSCRLFile
#	Full pathname of a file containing revoked certificates.
#
# Mandatory: no
# Default:
# TLSCRLFile=
<% if @tlscrlfile %>TLSCRLFile=<%= @tlscrlfile %><% end %>

### Option: TLSCertFile
#	Full pathname of a file containing the server certificate or certificate chain.
#
# Mandatory: no
# Default:
# TLSCertFile=
<% if @tlscertfile %>TLSCertFile=<%= @tlscertfile %><% end %>

### Option: TLSKeyFile
#	Full pathname of a file containing the server private key.
#
# Mandatory: no
# Default:
# TLSKeyFile=
<% if @tlskeyfile %>TLSKeyFile=<%= @tlskeyfile %><% end %>

<% end %>
